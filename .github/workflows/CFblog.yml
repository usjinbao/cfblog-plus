name: CFBlog工作流最终版

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  update_search_xml:
    runs-on: ubuntu-latest
    steps:
    - name: 检出存储库
      uses: actions/checkout@v3

    - name: 设置 Node.js 环境 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: 检查 Data/search.xml 文件是否存在
      id: check_file
      run: |
        if [ -f "Data/search.xml" ]; then
          echo "::set-output name=exists::true"
        else
          echo "::set-output name=exists::false"
        fi

    - name: 删除本地存在的 search.xml 文件（如果存在）
      if: steps.check_file.outputs.exists == 'true'
      run: |
        if [ -f "Data/search.xml" ]; then
          echo "::notice ::删除已存在的本地 search.xml 文件。"
          rm Data/search.xml
        fi

    - name: 从远程下载 search.xml 文件（最多尝试3次）
      env:
        CFBLOG_TOKEN: ${{ secrets.CFBLOG_TOKEN }}
        CFBLOG_HOST: ${{ secrets.CFBLOG_HOST }}
      run: |
        mkdir -p Data
        max_retries=3
        retry_count=0
        
        while [ $retry_count -le $max_retries ]; do
          download_status=$(curl -sfL --output /dev/null -w '%{http_code}' "https://${CFBLOG_HOST}/admin/search.xml" -H "cfblog_token: ${CFBLOG_TOKEN}")
          
          if [ "$download_status" -eq 200 ]; then
            echo "::notice ::尝试第 $(($retry_count + 1)) 次下载 - 文件下载成功。"
            curl -s "https://${CFBLOG_HOST}/admin/search.xml" -H "cfblog_token: ${CFBLOG_TOKEN}" > Data/search_new.xml
            break
          else
            echo "::warning ::尝试第 $(($retry_count + 1)) 次下载 - 文件下载失败，HTTP状态码: $download_status。准备重试..."
            ((retry_count++))
            sleep 5
          fi
          
          if [ $retry_count -eq $max_retries ]; then
            echo "::error ::达到最大重试次数，文件下载仍然失败。请检查网络连接、URL或cfblog_token是否正确。"
            exit 1
          fi
        done

    - name: 比较并更新文件（如有不同）
      if: steps.check_file.outputs.exists == 'true'
      run: |
        cmp --silent Data/search.xml Data/search_new.xml && {
          echo "文件一致，无需更新。"
          echo "::notice ::文件比较后发现无变化，跳过此步骤。"
        } || {
          echo "::notice ::文件有变化，准备更新。"
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # 检查并暂存未提交的更改
          git status
          if [ -n "$(git status --porcelain)" ]; then
            git stash save --keep-index "Stash unsaved changes before pulling"
          fi
          
          git pull origin $GITHUB_REF --rebase
          git add Data/search.xml
          git commit -m "更新 search.xml 文件"
          git push origin HEAD:$GITHUB_REF
          echo "文件更新成功。"
          
          # 如果之前有暂存更改，现在应用回去
          if git stash list | grep -q "Stash unsaved changes before pulling"; then
            git stash apply
          fi
        }

    - name: 若文件不存在，提交并推送新下载的文件
      if: steps.check_file.outputs.exists == 'false'
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add Data/search_new.xml
        git commit -m "初次提交或重新添加 search.xml 文件"
        git push origin HEAD:$GITHUB_REF
        echo "新文件已成功提交至仓库。"

    - name: 工作流完成标识
      if: always()
      run: |
        if [ "${{ steps.check_file.outcome }}" = "success" ]; then
          if [ "${{ steps.compare_and_update_if_different.outcome }}" = "success" ]; then
            echo '工作流执行成功。文件已更新或确认无需更改。'
          else
            echo '::错误::文件比较或更新步骤未成功。'
          fi
        elif [ "${{ steps.check_file.outcome }}" = "failure" ]; then
          echo '::错误::初始文件检查失败。'
        else
          echo '工作流结束，未执行主要操作。'
        fi

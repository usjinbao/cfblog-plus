<?xml version="1.0" encoding="UTF-8"?>
<blogs>
	<blog>
		<title>博客搭建记录12334123123231233</title>
		<content>访问
https://blog.bitwld.com/admin/search.xml?cfblog_token=11131232231111111dsadfsdf盛大发是12312盛大发sad发撒123123</content>
		<url>https://blog.bitwld.com/article/000003/.html</url>
		<time>2024-06-29</time>
	</blog>
	<blog>
		<title>静态博客添加waline第三方评论,开启阅读统计和最近评论</title>
		<content>##### 本文讲解,静态博客添加waline第三方评论,三个小目标
1. 添加第三方评论
2. 开启阅读统计
3. 右侧显示最近评论,以cf-blog为例1. 

**另外可参考：[Waline官网文档](https://waline.js.org/guide/get-started/ "Waline官网文档") 和 [Waline网站评论系统配置教程](https://blog.csdn.net/qq_52475653/article/details/134723496 "Waline网站评论系统配置教程")**

waline是valine的民间版本,比后者好用一点点,我暂时用到的有

1. 最近评论,很不错
2. 评论管理后台,很不错+1

**A.首先你要有valine**

有即可,我们需要里面的几个key,代码不用关心
请看这篇文章:[在cfblog内镶嵌-valine静态博客评论](https://blog.gezhong.vip/article/000017/cfblog-insert-valine.html "在cfblog内镶嵌-valine静态博客评论")

**B. 部署一个waline到vercel**

- 准备工作：
1、LeanCloud 账号注册
2、打开控制台，点击创建应用程序,设置应用名称， 选择开发版， 再点击创建即可
3、打开刚创建的应用程序，选择左下角的 设置 &amp;gt; 应用凭证，查看并记录你看到你的 APP ID,APP Key 和 Master Key，以便后续使用

**B.1 点击下面按钮部署**
[![](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https://github.com/walinejs/waline/tree/main/example)

**B.2 一直先一步,直到这里停下来设置变量**
```javascript
LEAN_ID            //这个对应valine的APP ID
LEAN_KEY           //这个对应valine的APP KEY
LEAN_MASTER_KEY   //这个对应valine的 Master Key
LEAN_SERVER      //绑定好的域名【LeanCloud 国内版需额外配置】
```

**B.3 部署后续**
部署后,会得到一个类似https://pinglun.vercel.app的网址,打开这个网址,注册管理员,被别人注册了你就惨了
https://[替换成你的].vercel.app/ui/register

- 随后添加自定义域名，点击顶部的 Settings - Domains 进入域名配置页，输入你的域名，可使用二级域名
- 到域名提供商建立CNAME解析记录 指向cname.vercel-dns.com等待DNS解析完成后，即可通过自己的域名来访问了
全部设置后点击顶部的 Deployments，然后如图选择Redepoly重新部署项目

评论系统：https://example.你的域名

评论管理：https://example.你的域名/ui

**C. 在博客内添加评论**
这时候你手里应该有这么几个数据:

- APP ID
- APP KEY
- Waline部署的网址,类似 https://888888.vercel.app- 

**C.1 在右侧小部件区域,添加一个小部件&amp;lt;div&amp;gt;,名为&amp;lt;最近评论&amp;gt;**
```javascript
"widgetOther":`
    &amp;lt;div id="linkcat-0" class="widget widget_links"&amp;gt;
        &amp;lt;h3 class="widget-title"&amp;gt;
            &amp;lt;span&amp;gt;最近评论&amp;lt;/span&amp;gt;&amp;lt;/h3&amp;gt;
        &amp;lt;div id="waline-recent"&amp;gt;&amp;lt;/div&amp;gt;

    &amp;lt;/div&amp;gt;
        `,
```
**C.2 在评论区加一个&amp;lt;div&amp;gt;,来显示评论,注意:ID=”waline”**
```javascript
"commentCode":`
        &amp;lt;div id="waline"  name="waline" class="comments-area"&amp;gt;&amp;lt;/div&amp;gt;
    `,
```
**C.3 头部加上样式,和Waline的js**
````"codeBeforHead":`
    &amp;lt;style&amp;gt;
        #waline-recent img {max-width: 100%;}
        #waline-recent li {border: thick double #32a1ce;}
    &amp;lt;/style&amp;gt;
    &amp;lt;script src='//cdn.jsdelivr.net/npm/@waline/client/dist/Waline.min.js'&amp;gt;&amp;lt;/script＞
    `,````
	
**C.4 底部加上Waline初始化代码,以及加载最近评论的代码**
```javascript
"codeBeforBody":`
        &amp;lt;script＞
            //这一段是初始化Waline的,visitor: true记得开启
            new Waline({
                el:'#waline',
                serverURL: 'https://pinglun.vercel.app',
                appId: 'eWrOzSzYP1Fm8QD96P0vKli-MdYXbMMI',
                appKey: 'jMF98EwbmKvdGnDLamPwAk1',
                avatar:'monsterid',
                recordIP:false,
                requiredFields:['nick'],
                visitor: true,
                //path:"/",
                placeholder:"整两句..."
            })
            //这一段是加载最近评论的
            window.addEventListener('load', function() {
              Waline.Widget.RecentComments({
                el: '#waline-recent',
                serverURL: 'https://pinglun.vercel.app',
                count: 10
              });
            });
        &amp;lt;/script＞
    `,
```</content>
		<url>https://blog.bitwld.com/article/000002/.html</url>
		<time>2024-06-26</time>
	</blog>
	<blog>
		<title>Cloudflare Workers + KV 搭建一个带后台管理的blog</title>
		<content>![](https://imgs.661212.xyz/file/29fb0d433bde0e1cd7d28.png)
相关链接：    

Demo :  https://cfblog.661212.xyz/

Github：https://github.com/wang-useful/cfblog-plus

(备注：本文介绍的是 cfblog-plus 原仓库为：https://github.com/Arronlong/cfblog-plus ，是gdtool/cloudflare-workers-blog 的一个修改版)

1.介绍
cf blog是一个运行在cloudflare workers 上的博客程序,使用 cloudflare KV作为数据库,无其他依赖. 兼容静态博客的速度,以及动态博客的灵活性，您可以通过访问项目仓库了解更多详情。

2.项目特点：
使用workers提供的KV作为数据库，可达到wordpress的灵活性
使用cloudflare缓存html来降低KV的读写，使其可达到静态博客的速度
后台使用markdown语法，方便快捷，一键发布(页面重构+缓存清理)
cfblog-plus新增了 文章置顶、后台首页选择、文章隐藏、静态搜索等功能

3.部署</content>
		<url>https://blog.bitwld.com/article/000001/.html</url>
		<time>2024-06-23</time>
	</blog>
</blogs>